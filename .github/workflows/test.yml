name: test

on:
  push:
  pull_request:
  schedule:
    - cron: '13 15 * * 0'  # 13:15 every Sunday

jobs:
  build_and_test_plugin:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: src

    #The following is a bit more complicated than usual, since we also want to
    #support windows, where ncrystal-core must be recompiled with
    #NCRYSTAL_WINEXPORTALL=ON to support usage with plugins:

    - name: Install ncrystal-core (Windows)
      if: runner.os == 'Windows'
      run: pip install --config-settings=cmake.define.NCRYSTAL_WINEXPORTALL=ON --no-binary ':all:' "ncrystal-core>=3.9.85"

    - name: Install ncrystal-core (Unix)
      if: runner.os != 'Windows'
      run: pip install 'ncrystal-core>=3.9.85'

    - name: Install other dependencies
      run: pip install "scikit-build-core>=0.10" "ncrystal-pypluginmgr>=0.0.3" "ncrystal-python>=3.9.85"

    - name: Install plugin
      #--no-build-isolation to prevent getting the ncrystal pkgs just installed
      #to instead be taken from PyPI, thus breaking the windows build:
      run: pip install ./src --no-build-isolation

    - name: Verify plugin loading (Windows)
      if: runner.os == 'Windows'
      run: |
        set NCRYSTAL_PLUGIN_RUNTESTS=1
        set NCRYSTAL_REQUIRED_PLUGINS=nxslib
        nctool --plugins

    - name: Verify plugin loading (Unix)
      if: runner.os != 'Windows'
      run: |
        export NCRYSTAL_PLUGIN_RUNTESTS=1
        export NCRYSTAL_REQUIRED_PLUGINS=nxslib
        nctool --plugins

    - name: Use nxs file
      run: nctool -d 'plugins::nxslib/Au_sg225.nxs'
